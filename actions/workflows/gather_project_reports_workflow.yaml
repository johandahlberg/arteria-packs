version: "2.0" # mistral version
name: snpseq_packs.gather_project_reports_workflow
description: Downloads summary statistics data from irma.

workflows:
    main:
        type: direct
        input:
          - year

        tasks:
            note_workflow_version:
              action: core.local
              input:
                cmd: cat ./version.txt
                cwd: /opt/stackstorm/packs/snpseq_packs/
              on-success:
                  - get_config

            get_config:
              action: snpseq_packs.get_pack_config
              publish:
                summary_host: <% task(get_config).result.result.summary_host %>
                summary_user: <% task(get_config).result.result.summary_user %>
                summary_host_key: <% task(get_config).result.result.summary_host_key %>
                summary_destination: <% task(get_config).result.result.summary_destination %>
                irma_remote_path: <% task(get_config).result.result.irma_remote_path %>
                irma_user: <% task(get_config).result.result.irma_summary_ssh_user %>
                irma_key: <% task(get_config).result.result.irma_summary_ssh_key %>
                irma_host: <% task(get_config).result.result.irma_summary_host %>
              on-success:
                 - get_year

            get_year:
              action: core.local
              input:
                # -1 is the default value of year - indicating that the current year should be used
                cmd: if [ -1 -eq <% $.year %> ]; then date +%Y; else echo <% $.year %>; fi
              publish:
                current_year: <% task(get_year).result.stdout %>
              on-success:
                - check_for_runfolders

            check_for_runfolders:
              action: snpseq_packs.get_remote_folder_list
              input:
                directory: <% $.summary_destination %>/<% $.current_year %>/
                username: <% $.summary_user %>
                hosts: <% $.summary_host %>
                private_key: <% $.summary_host_key %>
              publish:
                runfolders: <% task(check_for_runfolders).result.get($.summary_host).stdout %>
              on-success:
                - rsync_from_irma

            rsync_from_irma:
              action: core.remote
              with-items: runfolder in <% $.runfolders %>
              input:
                # Note:
                # - that modtimes are preserved here so that we can check downstream
                #   that required files are old enough.
                # - that this will always return 0 exit status and that this is a potential source or problems.
                #   Since we cannot know before hand if a report directory exists or not, we will attempt to transfer
                #   regardless of this. If this fails (and rsync returns code 23) we will ignore this, and this might
                #   potentially leading to us missing real errors.
                # - Filtering for downstream insertion into the database is carried out by the check_reports_old_enough
                #   which will only return the runfolders with valid summary reports for processing.
                cmd: rsync -e "ssh -i <% $.irma_key %>" -r --times <% $.irma_user %>@<% $.irma_host %>:<% $.irma_remote_path %>/<% $.runfolder %>/Summary <% $.summary_destination %>/<% $.current_year %>/<% $.runfolder %>/; if (( $? == 0 || $? == 23 )) ; then true; else false; fi
                hosts: <% $.summary_host %>
                username: <% $.summary_user %>
                private_key: <% $.summary_host_key %>
                timeout: 18000 # 5 h timeout
              concurrency: 5
